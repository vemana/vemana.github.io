function addChild(t,e){var n=document.createElement(e);return t.appendChild(n),n}function addSpan(t,e,n){const s=addChild(t,"span");return s.setAttribute("class",e),s.textContent=n,s}class MultiThreadedProgramElement extends HTMLElement{constructor(){super()}connectedCallback(){const t=this.attachShadow({mode:"open"}),e=JSON.parse(this.getElementsByTagName("script")[0].innerHTML);console.log(Object.keys(e)),t.appendChild(this.styleIt(this.getAttribute("title"),e)),this.styleSheetLocations().map(e=>{const n=document.createElement("link");n.setAttribute("rel","stylesheet"),n.setAttribute("href",`${e}`),t.appendChild(n)})}styleSheetLocations(){return["../../../assets/css/posts/10mmm-memory-model.css"]}styleIt(t,e){const n=document.createElement("div");n.setAttribute("class","multiThreadedProgram"),addSpan(n,"title",t);const s=addChild(n,"div");s.setAttribute("class","multiThreadedProgramContainer");const a={};return e.iList.forEach(t=>{const n=t.thread;var d=a[n];if(!d){(d=document.createElement("div")).setAttribute("class","singleThread");const t=e.threadData[n].backgroundColor,r=addChild(d,"style");r.type="text/css";const o=`\n          @scope {\n            & span.instr {\n              background-color: ${t};\n            }        \n          }          \n        `;r.appendChild(document.createTextNode(o)),addSpan(d,"header",e.threadData[n].name),a[n]=d,s.appendChild(d)}}),e.iList.forEach(t=>{const e=t.thread;a[e];Object.keys(a).forEach(n=>{if(n==e){const e=["instr"].concat(t.classes||[]).join(" ");addSpan(a[n],e,t.instr)}else addSpan(a[n],"emptyInstr","")})}),n}}customElements.define("multi-threaded-program",MultiThreadedProgramElement);